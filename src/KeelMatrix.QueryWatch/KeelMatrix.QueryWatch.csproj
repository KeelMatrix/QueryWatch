

<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net8.0;netstandard2.0</TargetFrameworks>

    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <LangVersion>latest</LangVersion>
    <Authors>KeelMatrix</Authors>
    <EnablePublicApiAnalyzers>true</EnablePublicApiAnalyzers>

    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageId>KeelMatrix.QueryWatch</PackageId>
    <Description>Catch N+1 queries and slow SQL in tests. Export JSON summaries for CI gates.</Description>
    <PackageTags>queries;performance;testing;efcore;dapper;ado;ci;gate</PackageTags>
    <RepositoryUrl>https://github.com/your-org/KeelMatrix.QueryWatch</RepositoryUrl>
    <PackageProjectUrl>https://github.com/your-org/KeelMatrix.QueryWatch#readme</PackageProjectUrl>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageIcon>icon.png</PackageIcon>
    <RepositoryType>git</RepositoryType>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- Release promotes warnings to errors -->
  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- Remove EF Core adapter sources from the core assembly (moved to KeelMatrix.QueryWatch.EfCore project) -->
  <ItemGroup>
    <Compile Remove="EfCore\**\*.cs" />
  </ItemGroup>

  <ItemGroup>
    <!-- SourceLink pinned centrally in Directory.Packages.props -->
    <PackageReference Include="Microsoft.SourceLink.GitHub" PrivateAssets="all" />

    <!-- Public API analyzer referenced unconditionally; toggle via property above -->
    <PackageReference Include="Microsoft.CodeAnalysis.PublicApiAnalyzers" PrivateAssets="all" />
  </ItemGroup>

  <!-- Scope System.Text.Json to netstandard2.0 only (CPM supplies the version).
       net8.0 uses the in-box STJ; do not restore the package there. -->
  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <PackageReference Include="System.Text.Json" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net8.0'">
    <!-- Make sure no STJ package comes in for net8.0 even via transitive -->
    <PackageReference Update="System.Text.Json" ExcludeAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <!-- Pack README and icon -->
    <None Include="README.md" Pack="true" PackagePath="" />
    <None Include="icon.png" Pack="true" PackagePath="" />
  </ItemGroup>

  <ItemGroup>
    <!-- Exclude moved redaction implementations and helpers -->
    <Compile Remove="Redaction\**\*.cs" />
    <Compile Remove="Redaction\*.cs" />
    <Compile Remove="Security\RedactionHelper.cs" />
    <Compile Remove="IQueryTextRedactor.cs" />
  </ItemGroup>

  <ItemGroup>
    <!-- Keep the extension methods in core -->
    <Compile Include="Redaction\QueryWatchOptionsExtensions.cs" />
  </ItemGroup>

  <ItemGroup>
    <!-- Reference the new Redaction implementations assembly for type forwarders and extension usage -->
    <ProjectReference Include="..\KeelMatrix.QueryWatch.Redaction\KeelMatrix.QueryWatch.Redaction.csproj" />
  </ItemGroup>

</Project>






